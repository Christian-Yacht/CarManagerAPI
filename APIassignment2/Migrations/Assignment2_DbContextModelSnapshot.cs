// <auto-generated />
using APIassignment2.Domein;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIassignment2.Migrations
{
    [DbContext(typeof(Assignment2_DbContext))]
    partial class Assignment2_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APIassignment2.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarCompanyName");

                    b.Property<string>("CarUserUserName");

                    b.Property<string>("Description");

                    b.Property<string>("Make");

                    b.Property<double>("MileAge");

                    b.Property<string>("Model");

                    b.Property<double>("Range");

                    b.HasKey("Id");

                    b.HasIndex("CarCompanyName");

                    b.HasIndex("CarUserUserName");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("APIassignment2.Models.Company", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Mission");

                    b.Property<string>("Strategy");

                    b.Property<string>("Vision");

                    b.Property<string>("Website");

                    b.HasKey("Name");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("APIassignment2.Models.Project", b =>
                {
                    b.Property<string>("ProjectTitle")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("ProjectTitle");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("APIassignment2.Models.Skill", b =>
                {
                    b.Property<string>("SkillTitle")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("SkillTitle");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("APIassignment2.Models.SkillsProjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectTitle");

                    b.Property<string>("SkillTitle");

                    b.HasKey("Id");

                    b.HasIndex("ProjectTitle");

                    b.HasIndex("SkillTitle");

                    b.ToTable("SkillsProjects");
                });

            modelBuilder.Entity("APIassignment2.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastActivityDate");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("APIassignment2.Models.UserSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SkillTitle");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("SkillTitle");

                    b.HasIndex("UserName");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("APIassignment2.Models.UsersProjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectTitle");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("ProjectTitle");

                    b.HasIndex("UserName");

                    b.ToTable("UsersProjects");
                });

            modelBuilder.Entity("APIassignment2.Models.Car", b =>
                {
                    b.HasOne("APIassignment2.Models.Company", "CarCompany")
                        .WithMany("ListOfCars")
                        .HasForeignKey("CarCompanyName");

                    b.HasOne("APIassignment2.Models.User", "CarUser")
                        .WithMany("Cars")
                        .HasForeignKey("CarUserUserName");
                });

            modelBuilder.Entity("APIassignment2.Models.SkillsProjects", b =>
                {
                    b.HasOne("APIassignment2.Models.Project", "Project")
                        .WithMany("SkillsProjects")
                        .HasForeignKey("ProjectTitle");

                    b.HasOne("APIassignment2.Models.Skill", "Skill")
                        .WithMany("SkillsProjects")
                        .HasForeignKey("SkillTitle");
                });

            modelBuilder.Entity("APIassignment2.Models.UserSkills", b =>
                {
                    b.HasOne("APIassignment2.Models.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillTitle");

                    b.HasOne("APIassignment2.Models.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserName");
                });

            modelBuilder.Entity("APIassignment2.Models.UsersProjects", b =>
                {
                    b.HasOne("APIassignment2.Models.Project", "Project")
                        .WithMany("UsersProjects")
                        .HasForeignKey("ProjectTitle");

                    b.HasOne("APIassignment2.Models.User", "User")
                        .WithMany("UsersProjects")
                        .HasForeignKey("UserName");
                });
#pragma warning restore 612, 618
        }
    }
}
